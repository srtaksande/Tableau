<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data (CO2 Emissions)_Migrated Data' inline='true' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data (CO2 Emissions)_Migrated Data' name='textscan.1o0vbkj1r9po7x16pd3311jhqrke'>
            <connection class='textscan' directory='C:/Users/Sandeep/Desktop/DWBI' filename='Data (CO2 Emissions)_Migrated Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='string' name='Income Group' ordinal='4' />
            <column datatype='string' name='Income Group (group)' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='SpecialNotes' ordinal='7' />
            <column datatype='string' name='TableName' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='real' name='CO2 (kt)' ordinal='10' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
            <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='string' name='Income Group' ordinal='4' />
            <column datatype='string' name='Income Group (group)' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='SpecialNotes' ordinal='7' />
            <column datatype='string' name='TableName' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='real' name='CO2 (kt)' ordinal='10' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
            <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code (Metadata - Countries)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (Metadata - Countries)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Code (Metadata - Countries)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group (group)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group (group)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Income Group (group)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpecialNotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SpecialNotes]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>SpecialNotes</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TableName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TableName]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>TableName</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 (kt)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>CO2 (kt)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Per Capita (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 Per Capita (metric tons)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil - Crude prices since 1861</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil - Crude prices since 1861]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Oil - Crude prices since 1861</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[CO2 (kt)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Code (Metadata - Countries)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Special Notes' datatype='string' name='[SpecialNotes]' role='dimension' type='nominal' />
      <column caption='Table Name' datatype='string' name='[TableName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data (CO2 Emissions)_Migrated Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CO2 (kt)]' derivation='Sum' name='[sum:CO2 (kt):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,Income Group (group))' hidden='true' name='[Action (Country Name,Income Group (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[Income Group (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Year)' hidden='true' name='[Action (Region,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 (kt):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m7uxhd11jx7m00ztln3o1hwku4j].[sum:Oil - Crude prices since 1861:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0m7uxhd11jx7m00ztln3o1hwku4j'>
        <column datatype='real' name='[Oil - Crude prices since 1861]' role='measure' type='quantitative' />
        <column-instance column='[Oil - Crude prices since 1861]' derivation='Sum' name='[sum:Oil - Crude prices since 1861:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data (CO2 Emissions)_Migrated Data.csv' id='Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2'>
            <properties context=''>
              <relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='string' name='Income Group' ordinal='4' />
                  <column datatype='string' name='Income Group (group)' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='SpecialNotes' ordinal='7' />
                  <column datatype='string' name='TableName' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='real' name='CO2 (kt)' ordinal='10' />
                  <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
                  <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='merged' inline='true' name='federated.0m7uxhd11jx7m00ztln3o1hwku4j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='merged' name='textscan.1w081ii16u7ppv13v2vn60sy1pb4'>
            <connection class='textscan' directory='C:/Users/Sandeep/Desktop/DWBI' filename='merged.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1w081ii16u7ppv13v2vn60sy1pb4' name='merged.csv' table='[merged#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='string' name='Income Group' ordinal='4' />
            <column datatype='string' name='Income Group (group)' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='SpecialNotes' ordinal='7' />
            <column datatype='string' name='TableName' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='real' name='CO2 (kt)' ordinal='10' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
            <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1w081ii16u7ppv13v2vn60sy1pb4' name='merged.csv' table='[merged#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='string' name='Income Group' ordinal='4' />
            <column datatype='string' name='Income Group (group)' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='SpecialNotes' ordinal='7' />
            <column datatype='string' name='TableName' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='real' name='CO2 (kt)' ordinal='10' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
            <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code (Metadata - Countries)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (Metadata - Countries)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Code (Metadata - Countries)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group (group)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group (group)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Income Group (group)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpecialNotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SpecialNotes]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>SpecialNotes</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TableName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TableName]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>TableName</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 (kt)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>CO2 (kt)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Per Capita (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 Per Capita (metric tons)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil - Crude prices since 1861</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil - Crude prices since 1861]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Oil - Crude prices since 1861</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country Code (Metadata - Countries)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Special Notes' datatype='string' name='[SpecialNotes]' role='dimension' type='nominal' />
      <column caption='Table Name' datatype='string' name='[TableName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='merged.csv' id='merged.csv_9D7F5E6261EA4926A1D72D5CECDA109B'>
            <properties context=''>
              <relation connection='textscan.1w081ii16u7ppv13v2vn60sy1pb4' name='merged.csv' table='[merged#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='string' name='Income Group' ordinal='4' />
                  <column datatype='string' name='Income Group (group)' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='SpecialNotes' ordinal='7' />
                  <column datatype='string' name='TableName' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='real' name='CO2 (kt)' ordinal='10' />
                  <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
                  <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Data (CO2 Emissions)_Migrated Data (2)' inline='true' name='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data (CO2 Emissions)_Migrated Data' name='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)'>
            <connection class='textscan' directory='C:/Users/Sandeep/Desktop/DWBI' filename='Data (CO2 Emissions)_Migrated Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country Code' ordinal='1' />
            <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='string' name='Income Group' ordinal='4' />
            <column datatype='string' name='Income Group (group)' ordinal='5' />
            <column datatype='string' name='Region' ordinal='6' />
            <column datatype='string' name='SpecialNotes' ordinal='7' />
            <column datatype='string' name='TableName' ordinal='8' />
            <column datatype='integer' name='Year' ordinal='9' />
            <column datatype='real' name='CO2 (kt)' ordinal='10' />
            <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
            <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country Code' ordinal='1' />
              <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='string' name='Income Group' ordinal='4' />
              <column datatype='string' name='Income Group (group)' ordinal='5' />
              <column datatype='string' name='Region' ordinal='6' />
              <column datatype='string' name='SpecialNotes' ordinal='7' />
              <column datatype='string' name='TableName' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
              <column datatype='real' name='CO2 (kt)' ordinal='10' />
              <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
              <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
            </columns>
          </relation>
          <relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)' name='merged.csv' table='[merged#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='Country Code' ordinal='1' />
              <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='string' name='Income Group' ordinal='4' />
              <column datatype='string' name='Income Group (group)' ordinal='5' />
              <column datatype='string' name='Region' ordinal='6' />
              <column datatype='string' name='SpecialNotes' ordinal='7' />
              <column datatype='string' name='TableName' ordinal='8' />
              <column datatype='integer' name='Year' ordinal='9' />
              <column datatype='real' name='CO2 (kt)' ordinal='10' />
              <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
              <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[CO2 (kt) (merged.csv)]' value='[merged.csv].[CO2 (kt)]' />
          <map key='[CO2 (kt)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[CO2 (kt)]' />
          <map key='[CO2 Per Capita (metric tons) (merged.csv)]' value='[merged.csv].[CO2 Per Capita (metric tons)]' />
          <map key='[CO2 Per Capita (metric tons)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[CO2 Per Capita (metric tons)]' />
          <map key='[Country Code (Metadata - Countries) (merged.csv)]' value='[merged.csv].[Country Code (Metadata - Countries)]' />
          <map key='[Country Code (Metadata - Countries)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Country Code (Metadata - Countries)]' />
          <map key='[Country Code (merged.csv)]' value='[merged.csv].[Country Code]' />
          <map key='[Country Code]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Country Code]' />
          <map key='[Country Name (merged.csv)]' value='[merged.csv].[Country Name]' />
          <map key='[Country Name]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Country Name]' />
          <map key='[F1 (Data (CO2 Emissions)_Migrated Data.csv)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[F1]' />
          <map key='[F1]' value='[merged.csv].[F1]' />
          <map key='[Income Group (group) (merged.csv)]' value='[merged.csv].[Income Group (group)]' />
          <map key='[Income Group (group)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Income Group (group)]' />
          <map key='[Income Group (merged.csv)]' value='[merged.csv].[Income Group]' />
          <map key='[Income Group]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Income Group]' />
          <map key='[Oil - Crude prices since 1861 (Data (CO2 Emissions)_Migrated Data.csv)]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Oil - Crude prices since 1861]' />
          <map key='[Oil - Crude prices since 1861]' value='[merged.csv].[Oil - Crude prices since 1861]' />
          <map key='[Region (merged.csv)]' value='[merged.csv].[Region]' />
          <map key='[Region]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Region]' />
          <map key='[SpecialNotes (merged.csv)]' value='[merged.csv].[SpecialNotes]' />
          <map key='[SpecialNotes]' value='[Data (CO2 Emissions)_Migrated Data.csv].[SpecialNotes]' />
          <map key='[TableName (merged.csv)]' value='[merged.csv].[TableName]' />
          <map key='[TableName]' value='[Data (CO2 Emissions)_Migrated Data.csv].[TableName]' />
          <map key='[Year (merged.csv)]' value='[merged.csv].[Year]' />
          <map key='[Year]' value='[Data (CO2 Emissions)_Migrated Data.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1 (Data (CO2 Emissions)_Migrated Data.csv)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code (Metadata - Countries)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (Metadata - Countries)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Code (Metadata - Countries)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group (group)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group (group)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Income Group (group)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpecialNotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SpecialNotes]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>SpecialNotes</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TableName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TableName]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>TableName</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 (kt)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>CO2 (kt)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Per Capita (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 Per Capita (metric tons)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil - Crude prices since 1861</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil - Crude prices since 1861 (Data (CO2 Emissions)_Migrated Data.csv)]</local-name>
            <parent-name>[Data (CO2 Emissions)_Migrated Data.csv]</parent-name>
            <remote-alias>Oil - Crude prices since 1861</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code (Metadata - Countries)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (Metadata - Countries) (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Code (Metadata - Countries)</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Income Group</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income Group (group)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Income Group (group) (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Income Group (group)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SpecialNotes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SpecialNotes (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>SpecialNotes</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TableName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TableName (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>TableName</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 (kt)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 (kt) (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>CO2 (kt)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Per Capita (metric tons)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO2 Per Capita (metric tons) (merged.csv)]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>CO2 Per Capita (metric tons)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil - Crude prices since 1861</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Oil - Crude prices since 1861]</local-name>
            <parent-name>[merged.csv]</parent-name>
            <remote-alias>Oil - Crude prices since 1861</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[CO2 (kt)]' role='measure' type='quantitative' />
      <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Code (Metadata - Countries) (merged.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code (Metadata - Countries)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code (merged.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name (merged.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Special Notes' datatype='string' name='[SpecialNotes]' role='dimension' type='nominal' />
      <column caption='Table Name' datatype='string' name='[TableName]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Year (merged.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Data (CO2 Emissions)_Migrated Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='merged.csv' datatype='table' name='[__tableau_internal_object_id__].[merged.csv_F56C803A63504BE4B22F0987EE9C6E6D]' role='measure' type='quantitative' />
      <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CO2 (kt)]' derivation='Sum' name='[sum:CO2 (kt):qk]' pivot='key' type='quantitative' />
      <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country Name)' hidden='true' name='[Action (Country Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name,Income Group (group))' hidden='true' name='[Action (Country Name,Income Group (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name]' />
          <groupfilter function='level-members' level='[Income Group (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Year)' hidden='true' name='[Action (Region,Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Region:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>%null%</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Korea, Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 (kt):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 Per Capita (metric tons):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m7uxhd11jx7m00ztln3o1hwku4j].[sum:Oil - Crude prices since 1861:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0m7uxhd11jx7m00ztln3o1hwku4j'>
        <column datatype='real' name='[Oil - Crude prices since 1861]' role='measure' type='quantitative' />
        <column-instance column='[Oil - Crude prices since 1861]' derivation='Sum' name='[sum:Oil - Crude prices since 1861:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data (CO2 Emissions)_Migrated Data.csv' id='Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2'>
            <properties context=''>
              <relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)' name='Data (CO2 Emissions)_Migrated Data.csv' table='[Data (CO2 Emissions)_Migrated Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='string' name='Income Group' ordinal='4' />
                  <column datatype='string' name='Income Group (group)' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='SpecialNotes' ordinal='7' />
                  <column datatype='string' name='TableName' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='real' name='CO2 (kt)' ordinal='10' />
                  <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
                  <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='merged.csv' id='merged.csv_F56C803A63504BE4B22F0987EE9C6E6D'>
            <properties context=''>
              <relation connection='textscan.1o0vbkj1r9po7x16pd3311jhqrke (copy)' name='merged.csv' table='[merged#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country Code' ordinal='1' />
                  <column datatype='string' name='Country Code (Metadata - Countries)' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='string' name='Income Group' ordinal='4' />
                  <column datatype='string' name='Income Group (group)' ordinal='5' />
                  <column datatype='string' name='Region' ordinal='6' />
                  <column datatype='string' name='SpecialNotes' ordinal='7' />
                  <column datatype='string' name='TableName' ordinal='8' />
                  <column datatype='integer' name='Year' ordinal='9' />
                  <column datatype='real' name='CO2 (kt)' ordinal='10' />
                  <column datatype='real' name='CO2 Per Capita (metric tons)' ordinal='11' />
                  <column datatype='real' name='Oil - Crude prices since 1861' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Year]' />
              <expression op='[Year (merged.csv)]' />
            </expression>
            <first-end-point object-id='Data (CO2 Emissions)_Migrated Data.csv_8194C0664B434B64983D61CEE86C37F2' />
            <second-end-point object-id='merged.csv_F56C803A63504BE4B22F0987EE9C6E6D' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
      <datasources>
        <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
      </datasources>
      <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
        <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
        <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]'>
        <groupfilter function='level-members' level='[none:Income Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
    <shared-view name='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)'>
      <datasources>
        <datasource caption='Data (CO2 Emissions)_Migrated Data (2)' name='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)' />
      </datasources>
      <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)'>
        <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
        <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
        <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Income Group:nk]'>
        <groupfilter function='level-members' level='[none:Income Group:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 Per Capita (metric tons):qk]' included-values='in-range'>
        <min>1.6198729140000006</min>
        <max>2830.0137184009991</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 9 (generated)' name='[Action10_84F5EB3001614DD8A928C0E3A329427A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 2' type='sheet' worksheet='Global Emission' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 2' />
      </command>
    </action>
    <action caption='Filter 10 (generated)' name='[Action11_05DE85C2CAA64E309FD9AC72CAF4FDD9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 2' type='sheet' worksheet='Region wise' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 2' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action12_C3266C6ADFBD4D01B732EFFA633D4C85]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 2' type='sheet' worksheet='CO2 Emission per capita' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 2' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action1_99383A5EA3654FB3A2A5BACD4A2DE5EF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 1' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_5C63F8D3585A4E63B66406FA21E2A542]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 1' type='sheet' worksheet='Region wise' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3_14E725C6020B47AC9B6723EF0C18DAD3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 1' type='sheet' worksheet='CO2 Emission per capita' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_1749592D1B26440A967E2AED792A49FE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Overview 1' type='sheet' worksheet='Annual Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Overview 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Annual Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon' fontsize='12'>Annual Global Per Capita Emission Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3_14E725C6020B47AC9B6723EF0C18DAD3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F07DDE144BEF42C4ABC68A485D7AC535]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Income Group (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[Region]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#45a727' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]</rows>
        <cols>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{D3CCF7C8-988B-4F7A-9C2E-668089DDB7E9}' />
    </worksheet>
    <worksheet name='CO2 Emission per capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Superclarendon' fontsize='12'>Global Carbon Emission Per Capita</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action9_312119BC655A487998F5FBA6BAA06CB7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F07DDE144BEF42C4ABC68A485D7AC535]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Income Group (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action11_05DE85C2CAA64E309FD9AC72CAF4FDD9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_F5A2B2ED4BE346AF88AE1F15BD8FB1A4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_1749592D1B26440A967E2AED792A49FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]' included-values='in-range-or-null'>
            <min>1960</min>
            <max>2011</max>
          </filter>
          <filter class='quantitative' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' />
              <lod column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' />
              <text column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Times New Roman' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#7d8d91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D47AC8D8-3BD0-4676-92C8-39E94BF7A9A6}' />
    </worksheet>
    <worksheet name='Country wise emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon' fontsize='12'>Country-wise Per Capita Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3_14E725C6020B47AC9B6723EF0C18DAD3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F07DDE144BEF42C4ABC68A485D7AC535]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Income Group (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[Region]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_F5A2B2ED4BE346AF88AE1F15BD8FB1A4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[none:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_1749592D1B26440A967E2AED792A49FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]</rows>
        <cols>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]</cols>
      </table>
      <simple-id uuid='{4AD4DDFA-0DF0-4E22-9FCA-E04B0B86C9EF}' />
    </worksheet>
    <worksheet name='Global Emission'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon'>Global Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 (kt)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='None' name='[none:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 (kt)]' derivation='Sum' name='[sum:CO2 (kt):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action12_C3266C6ADFBD4D01B732EFFA633D4C85]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[Region]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 (kt):qk]' />
              <lod column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]' />
              <geometry column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Latitude (generated)]</rows>
        <cols>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{261FF48A-5DCB-4CB4-B241-1C9865E807C9}' />
    </worksheet>
    <worksheet name='Oil Prices Vs PCE'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon' fontsize='12'>Oil Prices vs Carbon Per Capita Emission</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data (2)' name='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)' />
            <datasource caption='merged' name='federated.0m7uxhd11jx7m00ztln3o1hwku4j' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)'>
            <column datatype='real' name='[CO2 (kt)]' role='measure' type='quantitative' />
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 (kt)]' derivation='Sum' name='[sum:CO2 (kt):qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m7uxhd11jx7m00ztln3o1hwku4j'>
            <column datatype='real' name='[Oil - Crude prices since 1861]' role='measure' type='quantitative' />
            <column-instance column='[Oil - Crude prices since 1861]' derivation='Sum' name='[sum:Oil - Crude prices since 1861:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Country Name:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 Per Capita (metric tons):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m7uxhd11jx7m00ztln3o1hwku4j].[sum:Oil - Crude prices since 1861:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 (kt):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m7uxhd11jx7m00ztln3o1hwku4j].[sum:Oil - Crude prices since 1861:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[sum:CO2 (kt):qk] + [federated.0m7uxhd11jx7m00ztln3o1hwku4j].[sum:Oil - Crude prices since 1861:qk])</rows>
        <cols>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Year:qk]</cols>
        <pages>
          <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' start='0' trail-effect='none' />
      </table>
      <simple-id uuid='{03EB337F-F03E-4BEE-906B-1AFB3DE4AAD7}' />
    </worksheet>
    <worksheet name='Region wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon' fontsize='12'>Carbon (per Capita) Emission Region-wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3_14E725C6020B47AC9B6723EF0C18DAD3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F07DDE144BEF42C4ABC68A485D7AC535]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Income Group (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]'>
            <groupfilter function='crossjoin' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='member' level='[Region]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[Region]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[Region]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[Region]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[Region]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[Region]' member='&quot;Sub-Saharan Africa&quot;' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Year:ok]' member='1960' />
                <groupfilter function='member' level='[none:Year:ok]' member='1961' />
                <groupfilter function='member' level='[none:Year:ok]' member='1962' />
                <groupfilter function='member' level='[none:Year:ok]' member='1963' />
                <groupfilter function='member' level='[none:Year:ok]' member='1964' />
                <groupfilter function='member' level='[none:Year:ok]' member='1965' />
                <groupfilter function='member' level='[none:Year:ok]' member='1966' />
                <groupfilter function='member' level='[none:Year:ok]' member='1967' />
                <groupfilter function='member' level='[none:Year:ok]' member='1968' />
                <groupfilter function='member' level='[none:Year:ok]' member='1969' />
                <groupfilter function='member' level='[none:Year:ok]' member='1970' />
                <groupfilter function='member' level='[none:Year:ok]' member='1971' />
                <groupfilter function='member' level='[none:Year:ok]' member='1972' />
                <groupfilter function='member' level='[none:Year:ok]' member='1973' />
                <groupfilter function='member' level='[none:Year:ok]' member='1974' />
                <groupfilter function='member' level='[none:Year:ok]' member='1975' />
                <groupfilter function='member' level='[none:Year:ok]' member='1976' />
                <groupfilter function='member' level='[none:Year:ok]' member='1977' />
                <groupfilter function='member' level='[none:Year:ok]' member='1978' />
                <groupfilter function='member' level='[none:Year:ok]' member='1979' />
                <groupfilter function='member' level='[none:Year:ok]' member='1980' />
                <groupfilter function='member' level='[none:Year:ok]' member='1981' />
                <groupfilter function='member' level='[none:Year:ok]' member='1982' />
                <groupfilter function='member' level='[none:Year:ok]' member='1983' />
                <groupfilter function='member' level='[none:Year:ok]' member='1984' />
                <groupfilter function='member' level='[none:Year:ok]' member='1985' />
                <groupfilter function='member' level='[none:Year:ok]' member='1986' />
                <groupfilter function='member' level='[none:Year:ok]' member='1987' />
                <groupfilter function='member' level='[none:Year:ok]' member='1988' />
                <groupfilter function='member' level='[none:Year:ok]' member='1989' />
                <groupfilter function='member' level='[none:Year:ok]' member='1990' />
                <groupfilter function='member' level='[none:Year:ok]' member='1991' />
                <groupfilter function='member' level='[none:Year:ok]' member='1992' />
                <groupfilter function='member' level='[none:Year:ok]' member='1993' />
                <groupfilter function='member' level='[none:Year:ok]' member='1994' />
                <groupfilter function='member' level='[none:Year:ok]' member='1995' />
                <groupfilter function='member' level='[none:Year:ok]' member='1996' />
                <groupfilter function='member' level='[none:Year:ok]' member='1997' />
                <groupfilter function='member' level='[none:Year:ok]' member='1998' />
                <groupfilter function='member' level='[none:Year:ok]' member='1999' />
                <groupfilter function='member' level='[none:Year:ok]' member='2000' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_1749592D1B26440A967E2AED792A49FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]'>
            <groupfilter function='level-members' level='[none:Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region,Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' value='36' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' />
              <text column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Times New Roman' />
                <format attr='font-size' value='12' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{70892D07-712E-4783-AD3B-F14C8EC32FBB}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{7208BB9D-A6C5-4DD6-B8FF-2BAF062EB21D}' />
    </worksheet>
    <worksheet name='Trend - Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Superclarendon' fontsize='12'>Annual Emission Per Capita </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
            <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Income Group (group)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]'>
            <groupfilter function='level-members' level='[Country Name]' user:ui-action-filter='[Action3_14E725C6020B47AC9B6723EF0C18DAD3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_F07DDE144BEF42C4ABC68A485D7AC535]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country Name]' />
              <groupfilter function='level-members' level='[Income Group (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]'>
            <groupfilter function='level-members' level='[Region]' user:ui-action-filter='[Action2_5C63F8D3585A4E63B66406FA21E2A542]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]'>
            <groupfilter function='level-members' level='[none:Year:ok]' user:ui-action-filter='[Action4_1749592D1B26440A967E2AED792A49FE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]'>
            <groupfilter from='&quot;East Asia &amp; Pacific&quot;' function='range' level='[none:Region:nk]' to='&quot;Sub-Saharan Africa&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Country Name,Income Group (group))]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Year)]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</column>
            <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]</rows>
        <cols>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</cols>
        <pages>
          <column>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{29A69DB3-E9CB-4263-9C24-D930C5EECDBE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Overview 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
      </datasources>
      <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
        <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
        <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
        <column datatype='string' name='[Region]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
        <column-instance column='[CO2 Per Capita (metric tons)]' derivation='Sum' name='[sum:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='127' param='horz' w='98828' x='586' y='1042'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97916' id='125' w='87115' x='586' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='48958' id='49' param='vert' w='87115' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='48958' id='8' param='horz' w='87115' x='586' y='1042'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='48958' id='5' param='horz' w='59663' x='586' y='1042'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='48958' id='3' w='59663' x='586' y='1042'>
                      <zone h='48958' id='1' name='CO2 Emission per capita' w='30167' x='586' y='1042'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='48958' id='6' name='Region wise' w='29496' x='30753' y='1042'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='375' h='48958' id='7' is-fixed='true' param='vert' w='27452' x='60249' y='1042'>
                    <zone h='48958' id='10' name='Annual Trend' w='27452' x='60249' y='1042'>
                      <layout-cache minheight='188' minwidth='166' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='48958' id='124' name='Country wise emission' w='43558' x='586' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48958' id='159' name='Trend - Region' w='43557' x='44144' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='97916' id='126' is-fixed='true' param='vert' w='11713' x='87701' y='1042'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9766' id='128' mode='slider' name='Country wise emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8985' id='129' name='CO2 Emission per capita' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' values='database' w='11713' x='87701' y='10808'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8985' id='130' name='CO2 Emission per capita' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]' values='database' w='11713' x='87701' y='19793'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6771' id='160' mode='dropdown' name='Trend - Region' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' w='11713' x='87701' y='28778'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21615' id='161' name='Trend - Region' pane-specification-id='1' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' w='11713' x='87701' y='35549'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='14323' id='162' name='Trend - Region' synchronized='1' w='11713' x='87701' y='57164'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='180' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97916' id='179' param='vert' w='98828' x='586' y='1042'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8985' id='129' name='CO2 Emission per capita' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 Per Capita (metric tons):qk]' values='database' w='11713' x='87701' y='10808'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8985' id='130' name='CO2 Emission per capita' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]' values='database' w='11713' x='87701' y='19793'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='1' is-fixed='true' name='CO2 Emission per capita' w='30167' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='6' is-fixed='true' name='Region wise' w='29496' x='30753' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='10' is-fixed='true' name='Annual Trend' w='27452' x='60249' y='1042'>
                  <layout-cache minheight='188' minwidth='166' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9766' id='128' mode='slider' name='Country wise emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='124' is-fixed='true' name='Country wise emission' w='43558' x='586' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6771' id='160' mode='dropdown' name='Trend - Region' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' w='11713' x='87701' y='28778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48958' id='159' is-fixed='true' name='Trend - Region' w='43557' x='44144' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='21615' id='161' name='Trend - Region' pane-specification-id='1' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' w='11713' x='87701' y='35549'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' h='14323' id='162' name='Trend - Region' synchronized='1' w='11713' x='87701' y='57164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{52F5DB0D-2E28-49BC-8E72-3393019AF837}' />
    </dashboard>
    <dashboard name='Overview 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='Data (CO2 Emissions)_Migrated Data' name='federated.0l6mej60if0g8c1dtingi0wbgeb7' />
      </datasources>
      <datasource-dependencies datasource='federated.0l6mej60if0g8c1dtingi0wbgeb7'>
        <column datatype='real' name='[CO2 Per Capita (metric tons)]' role='measure' type='quantitative' />
        <column datatype='string' name='[Income Group]' role='dimension' type='nominal' />
        <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
        <column-instance column='[CO2 Per Capita (metric tons)]' derivation='None' name='[none:CO2 Per Capita (metric tons):qk]' pivot='key' type='quantitative' />
        <column-instance column='[Income Group]' derivation='None' name='[none:Income Group:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='6' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='7' w='65800' x='800' y='1000'>
              <zone h='98000' id='5' name='Global Emission' show-title='false' w='65800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='326' h='98000' id='8' is-fixed='true' param='vert' w='32600' x='66600' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6375' id='10' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]' show-domain='false' show-null-ctrls='false' w='32600' x='66600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6375' id='11' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:CO2 Per Capita (metric tons):qk]' show-domain='false' show-null-ctrls='false' w='32600' x='66600' y='7375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='67' h='9375' id='66' is-fixed='true' mode='slider' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]' values='database' w='32600' x='66600' y='13750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='268' h='34500' id='12' is-fixed='true' name='Region wise' show-title='false' w='32600' x='66600' y='23125'>
                <layout-cache fixed-size-w='268' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38500' id='13' name='CO2 Emission per capita' show-title='false' w='32600' x='66600' y='57625'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='112' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='111' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6375' id='10' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]' show-domain='false' show-null-ctrls='false' w='32600' x='66600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='6375' id='11' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:CO2 Per Capita (metric tons):qk]' show-domain='false' show-null-ctrls='false' w='32600' x='66600' y='7375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='67' h='9375' id='66' mode='slider' name='Global Emission' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]' values='database' w='32600' x='66600' y='13750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='Global Emission' show-title='false' w='65800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='268' h='34500' id='12' is-fixed='true' name='Region wise' show-title='false' w='32600' x='66600' y='23125'>
                  <layout-cache fixed-size-w='268' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38500' id='13' is-fixed='true' name='CO2 Emission per capita' show-title='false' w='32600' x='66600' y='57625'>
                  <layout-cache type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D4AEE6E0-79D4-4330-9BBA-1F5BAE716956}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='84440' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{AA5D814D-2113-4CFB-84D1-7909ECA5E260}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='CO2 Emission per capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B1CE7C1C-BB4C-41DE-890E-F648E2FD8AFD}' />
    </window>
    <window class='worksheet' name='Country wise emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[:Measure Names]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group (group):nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Income Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D560BF9F-D9C0-488F-9821-FD305BEB3459}' />
    </window>
    <window class='worksheet' maximized='true' name='Region wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBAEF961-5EFE-42A7-B92C-ECD4B8AEBFE9}' />
    </window>
    <window class='worksheet' name='Annual Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6799C74-22EC-44E5-9A17-8A76F0C6BA6D}' />
    </window>
    <window class='worksheet' name='Trend - Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1960</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Region:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9413B377-8F41-43B4-B53E-F873A983C8B1}' />
    </window>
    <window class='worksheet' name='Oil Prices Vs PCE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Country Name:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Income Group:nk]' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='1' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1960</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Country Name:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7 (copy)].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF2D073B-CBE7-4939-A41E-CDFC66282164}' />
    </window>
    <window class='worksheet' name='Global Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[Action (Region)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0l6mej60if0g8c1dtingi0wbgeb7].[sum:CO2 (kt):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:CO2 Per Capita (metric tons):qk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Country Name:nk]</field>
            <field>[federated.0l6mej60if0g8c1dtingi0wbgeb7].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C09C80BE-80BE-41D1-B8CC-A19DE2FFF9A6}' />
    </window>
    <window class='dashboard' name='Overview 1'>
      <viewpoints>
        <viewpoint name='Annual Trend'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='CO2 Emission per capita' />
        <viewpoint name='Country wise emission' />
        <viewpoint name='Region wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend - Region'>
          <current-page>
            <multibucket>
              <bucket>2011</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='126' />
      <device-preview selected='Desktop' />
      <simple-id uuid='{B90C0678-53D0-4DF4-B8C0-BBDE0D97F76D}' />
    </window>
    <window class='dashboard' name='Overview 2'>
      <viewpoints>
        <viewpoint name='CO2 Emission per capita' />
        <viewpoint name='Global Emission'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Region wise' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6DF15633-0573-479A-B7BB-7B5FAD85A7EC}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{2DE9AC02-E001-4FE4-A67E-281A084FD519}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{45B2A1E3-5953-4830-BD08-31B48B34E8F4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Annual Trend' width='192'>
      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
      E+jteEvNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CO2 Emission per capita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise emission' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2XNk93XfP3frfd+BxtYABjMcDoczJEVrsURLkR05jpeUnUqVKpWkKlXJ
      g/2WVOVVf0Cekkr5NU92xbGtyCqpHNuSKMpchuuQnA371gB63/e+Sx4wXCazAeg76G7gfl44
      RF987zmNPv37/c79nfMTDMMwsLA4p4jDNsDCYphYAWBxrrECwOJcYwWAxbnGCgCLc40VABbn
      GisALM41ZzIAzHq0YabOKNpkls4o2nRUZFPuOGJo7S6SPvibqWoasiQNbo+uIwoiCANLmWaT
      5dshYxEAhtZjZ3efxNQMdvnpg5a2ncPIVk25t2qKCmgm6YB5Nlm+jUkAbKyu4o3EWFleJR5w
      0JNd5DdWCM5dQGhV8ESS2IwOXUMhEvQN21yLMWIs1gAaEuFwBEXSyedz3Ll1D38kRjzsJpst
      cOfuXdbWtvF63cM21WLMGIsRYCIW4OaH7yE7wzhtdiIRN26XzP5BAZvdgcfnJxoIYJcHnz9a
      nC+Es7gbtH9QRGx0B9bRdR1RHHyQ1HUdQRAQhMFXimbaZPl2RgNAVVVkefDBrd/voyjKwDqa
      piEIgil/XLNssnw75EwGQOvN/4Gx+rcD6xgYCCbk9z57g03IFJpok+UbnHANsLq6yoULM+zu
      VpiejgNQqVTQNI1wOPzAtbu7u0xPT1Mv7XFvt8FXXrz4wOsHuztEpmdQgP3tVTKFOjOLl4j4
      XZ9fU6lU8AcCD7hULBYfutdnGK0iennzJK49rGWKirlao6ZjptZp65woAFRVBQxUtcHbb6wj
      eX34XTKl7D6R5Cx3PnwH58RF4g6NUldgenqafKGB32GQ2dth66BMQGnz3p0sv3Z9nt133yG5
      +AK6pmEA/W6NN3/5Ln0UPIEgXofE3tYK9sAkqx+9gTNxCbWeZ3YmyY13P+DK9eusr+7y3e/9
      Jn6X7SQuWZxTTjRx8ygG7964ia4oTM4uEg95MBBITsTRdYhOzpKaih3OxSUJQ++TL+QpFQoU
      al0uP3+JngqzET+qKIIBosCXFlICc0sXSc2liN4fCdyBGLMTbjzBaVx2O9GQD90QWLh4mVgk
      SsSnUKw2zXpfLM4JZ3IN0Pzlf8W49zcD6xgGmJDcONQBUybKptpk+XY2A8DKAp2ezrj7NhYP
      wo5LIZuhWa8NrGPlyo+mMy6+hWNxAqEHEydDCYB+vUzb7sdnO5qzpWKR0GMyPo+ikMtwsLN9
      UvMsziiyLI9GAGitOg3Rh1Y8QAn6qRYLCIKM3WZnbz9NdGKCg81NdEnB7Q/Tr+6zuetjOuYh
      nS0zmYjh8XmpV2tks0Wi0SD7mRypC889kD61sHgaQ5sC6ZpGo1JGFHXqXZ3C7hrJuJ9spYHd
      XSc2NU2vYyAIPWyBKEKrw3apxvxEkM3dNBOTcUqlCq7QDO1WltRMhGajawWAxbEYym5QJRCm
      vL2MMxqjXmkTDfp49atfITy1yGw0QCQSIxwKkUiEicfjeB0KYijK1fkZCnWdq1ev0Gx2mJlN
      MRX34nfA//35DRwuxzDcsRhjzmQWqFatoPb7A+tomoZkQoWSruuIgmBKjs8sm86jby63G4fz
      wRnCmcwCuRSQZRNKIlUd+QgVaE9D0w6zEmbkuM2y6cz6prjpC7azkQbtdDoIGMg2B5J4jHd4
      +5eQ+WDg+5v15phZpWCWTWfWt9R3IPmN073ns+Jgb4d212B6JolTEah3BdyKTteQEHWVzMEB
      8ekU5ew229sHXL7+CiGvc9hmW4wRIx0AxYM09vgiB+ldJnyw13DSazUQBQ2f10s2n6fU1vEo
      GtF4HJ/LPmyTLcaMka4Jnr34AnG3iM0ms7xTIJaYxOVy4HfZCIeCOF0egj4Pfn8QSe9QaXSG
      bbLFmHEms0Dq/k3kRnpgnfO4XeAkOiPlW3iJvi91vivCrM1wp6cz7r6N9BrgpPSyP6FTGzwL
      ZBgGXRO+2QzDMOUb8jMts2w6bd+U8Lewx7478D3NxKQAqPGrn9/CHvTx6vUrT7yy06iDw0Vu
      e5VCpYE/Ns3C/bLKo7K2tsbi4uJjX9f7VfTO/rE0H8eolfqZqXXaOoY6+A5dszEpAHRUVcMO
      LN/6CMHmADkAap12rUitIxL1w7sfb/HKK9eYnEmhiXZeeuki95aXeff1D8mqfuYjMvaQH6Pn
      x9DKpDfWmLnyChsfvcPSV15j7b2/Q05cIe6VWL75Fh9sVLh2YZJSoYzsdTGbep6JsMcclyzO
      BSZlgQ4XQf1+H7snyIX5GXLpDQ4KVfyRCRam4hiSnUsXL2KThcOSnX6LDz/6AEGxo8kefA4J
      ZyDG/NQk+9vL5Cst4vEouXyeRCJGJrOF7EpgEw7nnO2eQSzoQXb6eS6VYuG5JQTdrM6SFueF
      M7kIbu78L/TK2wPrGJjV7sMcHTO1hqFji/0m9sTvPPZ1qy+QSVhZoNPTGXffzmQWqHFvh95+
      cWAd83LlBsIDXS9GwSbzfXNMRvBdSQ2seZqMZAD022Vu3toklJhkYToBQKlUIhQKPXRto9HA
      43lw4Vu/u031nbunYqvFFwS+cskKADPQeg16qkC71WJ/e41yR0TsVdna2GRqOkmmXCfgEKh1
      RXwuhVatSDpTILV0haDH2g9kcXRGcy+QIJKcSaH32+TzeTbW15Ccfi7PhcgWG0zOzFMp5Nlc
      X6VSa9DsalxaStFptYZtucWYMZIjgOIIUNtcIzaVQmiX8MXniIb82BSYtYPTIaFNTOCNzxH2
      e5BlCbtNJqiYlWuxOC+cySxQ66CI3mgPrGNm2aBZG8ZGsSTyM98Unxt7PHhiLSsLZBJtr0HH
      hOYQmmogmfAO6ZqBIAqmlA2aZZOZvk34J5HNEBsCp2p1u93GaZPp6hJ25cnLj263i91uo1zI
      oUpOIkHfkR+4/PCTv+Dna383uMEWR+JP/+X/xO8MDNuME3Gqi+CtrS1oF9kvNdjd3qJQqZHe
      2eXGW/9Ivlwnvb1Bo90ns7fN7eV16DdZ3thHV7u8//abHOSK7GysUiyXeesf/5FyrcHm+jqd
      fo/N9XXaPTMP7LQ4D5z6uKVpGvRKlNsK7d4BWl8gEI4gtwp8tLFNvFpEcUzicdpAdrOQDLGz
      n8MbDBPw2vh4eQ+t2CYciVDLbrG9X6TT65LNlPBGJ3DarMZYFkfnVEcAr13kg5Us8bCPiXiY
      YCCAz+/DLuo0BRshj5dgJEm3uo+GDFqPbLGM3eHE65DIFMo4XF5CQT+y3kNyeHG7vQQCQfx+
      F2dvOW/xrDmTWaBfrb3OSmHwJ8FmbRcw9MMm+mdxK4ShG3z/lX+Hy4SR19oMZxLWZrjT0xl3
      38Yzd/UU8j/7kManG4MLmblnGBO1TNRJ/O7X8V6cMUFwPBkgAHQ2795kJV3na7/+DXxOiUql
      SiBwmA5r1Ks4XF5EDA6yWZKTk5//Znp3l+T09CP/jno7x0HDj9TZ5eM7G1z7yteIh7wYRoe9
      vTpTU9GnWqbWmnQPSid37Ryht3vDNmGoDBAAIqmFeTpKi8r+GltdCYcM6c0V6h2NUCSK11Fh
      L5PH5fPy0V/+GYmLLyF06nR0ieRUkjd/9hPqtgkm3SqNnsBELEgxnyY093Xmp+coN3Rs/TLv
      vncPfyREbjNNrhJHK22T6Xm5POVlbztPdClJI18lMbfEdGw889EWw2Gwidtnj/dlB1cuLaDr
      Op5gjKXZCVRVp9/vgSChdet4okmMTou+piNJEoZhYMgOHLKBL5xgYTpOt9tHlKTPn5gKgoCh
      6xgG6Jp++HO9jyo48dhFuv0+uqah6jpgoOtnbjlj8YwZ60VwZneDvUKLa9evPNCkde///Ira
      +ysD65+DJQDJf/VtfC/Mn1hn3BfBYx0Aj8PKAp2ezrj7diazQI3l3ZEqiTxsHgVmfHeb/Rwg
      +k9eQjBBb1wZ2QBQu03u3lslMbtINPD4Xj/tUglCIb7cFL1+Z8sqiTwi0e9cH7YJQ2VkAyCz
      m2b2uSu49C6ffnKTaHKe/PZdZF8Cr9ShrjoIOXVWb2+y+PVr3FvfZfHiZbzOwYdQi/PDyI59
      siTQbveolYs0Wk3WN3ZwB2PYxR6FfIWttTXyjQ4XUlOUigUa5QJ7+cqwzbYYM0Z2BIjPLrC+
      ukwoniQQ6BCfSGBXZDAMHJJIcHKWoFskfVBlNhmDjsBU1Ddssy3GjDOZBWodFNDrVknkUXTc
      F6YGssvKAo0gsl1EMME1TQXJhHSqrmkIomhOAJzAJsnvR3Q9uFvTrA/buDNiAaBRrbbx+4/W
      4bnTaWO3Ox+qta3+1V/T/tnPn4F940noP/4HPN/+jWGbMZKMVAC08vt8tFnhmy8t0ddENLVP
      tZRDcbhZXVnhueev0u93EI0+XcNOu5LD4/bjifjI7heYmZ1FkazWKBZHZ6QCYH17F7VYYa/g
      R9fdtEsZKpUS8dklgqEQndweTX+EXmaf3Vyd6ekEtWoVQ+qzvbkKDi8Lk+Fhu2ExRoxUGjSY
      mOa173wLo6NTSK+D4sTv9yJKIkaviWb3koyHsCk2IuEwXq8Pr8+HKIr4A2FcdmtOa3E8zmQW
      qPbGG/TvLQ+sY+iH/XwG1jHzjLAT2OR57VvYL1584GfWXqBDzmQAWJvhTk9n3H0bqTWAWWyt
      LpPPHJigZObZLmbxeJu+8s3XkGVrGngcTi0Aeo0aH9z6FLsrxPWrzyEA6XSaqamp4wnpKrc+
      fI9cR2JuKs7s3Cz//2OhTqdNo1Y1y/Sx4eyN5c+eUwsAQ9dRNQ2bARu33uPtezlefX6ad2+k
      mZya5r03X+fiiy+Rz9aALp5AFEcvz3JWZTYkYnineOXKIogyCwsLuLsivfwO776xTWx6ghtv
      v8erv/E9FicfPkTDwuJxnGoWSAD6vS61do+I24Hu9HHl8hLNapFIMkm33mB28TKzM7OEvHba
      PfA7ZXyhCPlclnK5/ICW0xvi6oUZmj2dqbl5vE7rcAyL4zE+i2DDIJfPE4vFnnrp3Y8/IpPe
      GfyWjFYZ49O0vvlb/wz5iIs/axF8yPgEwDGwskCnpzPuvp3JLFAjU6Vf7QysY2ZJJIJgyijw
      ZZv8sxFs1ploA3EqAbC7vkp4Zo5GuU4s9uhFaimbZjdX5/nnLyGLAu1akb4tgM9xP8djGJQr
      FYLBB08g6TabSG73A47U98rUNgavCR51nGGPFQADcioB0Om32dnewugLNCtZdEcAr0OiXq0R
      CvpxhcJkSw2uXF6iVjxge7/MZMROW4LtbJrJ6RnS25tokpPCQRrV5sOhNyi1YTLow613WbdK
      Ii1OwKlkgWS7F6fRolGvcHdtl3q9Trmco9sos7xbxCYK6Gofta+Syxco769SbEI+vUG+1iK7
      uUUwtYRb1umJNoR2jZ7sJBZ0U6/WKVolkRYn5FRGgFgshsM2gTPYIhkP0JW8xLwShs1Pp1VH
      QGAhNcXa5i7JWAxBcZFIJJCnk2yvrzExN09uZ4tgYgq9WUS1RQl67IgCqH4NWdZpWyWRFifg
      TGaBmqUGRlcdWMe08kNdR3wGJZGOkBv5hDtgrSzQIWcyC2RT2kji4DXBqqohy2bU3+qIojkB
      oKoastOD6H56l2yLpzOUAGhUi7Q0iVjoEZ2cDYNuv4/dZgOg32miCnac9gdNPTxF8tEZkN47
      f4p+6y9MsbVrioq5aAvfwfl7/23YZpwJhhAAOnfurDA5N0+jUqTUVImFvMiSRB+R4v4O1a5O
      0OdjciLOfnqThu5jYSZGo1HH6Hcx7D6K+xt4I0mcuoo95CN3UGB6ZsYqibQ4FkMIAJHF+WlW
      djOoXpGVjV3KUylm4m429hpEJqLY+mWqtTqTiTDbOxl6YgWbXsUbniKbXiXTMJibCNEoZqlq
      EBJ6bK4tY9i9LFib4SyOwRACQCOXK2B3OBFlg3A0QsDnYm0jTTQ5R25vl1Akik9RUDttFq68
      hNRr0pMU4mEfpQMnYZsdGZWKKpEM+RAEg0AojMs++Hzd4nxxJrNAnVs/gv33B9bRDQPRjJMd
      75dEmrIVwjCQ45exXfv+QDpWFuiQMxkA1ma409MZd99GMA1qUCkW6BkS0XAIQQBd7aGiYJOP
      9h366S9/ys7tDwe3xKRidsMwEBAG3hP9nX/9xzi81hloZjKCAQAHBxnQe4g2J51aiaDSJivN
      4O5lUTxBus0mgYAPAdDUHqVqE1k0CMcmsMkizUqJ4t72sN0wHU0d/OGexYOMZAC0GhWwuzlY
      ucV+qcT8dAJNStNR7GiVXWRBolIpoYjQVQ3sao92yI9RqjMZ8w/bfIsxYiQDwOVy0exDMBal
      K0j4fQE0xc3m+iqSw0cy6qdZyZKvG8zOJPEKoPvd6F3rGYDF8RjBABB47urLn//f1MwcAIba
      oZBxM7OwiN9th6nJh3/VcfifyPQ8mtof2BJD1005P+twDQAPdfE9JjaH8+kXWRwLKwv0BKxM
      ydMZd99GcAQYnBs7m6wV8wPr3K9kHKqOIsl8/6VXBzfC4pGMRQAc7CzTNIIszj7YEWJvL81E
      cuqhqp5qp83+GWmMZZPG4k80tozFu1tvg26U2Fov0VQF7JIDmT71VpW97R2mUrO8+au3+fp3
      f5tkyD1scy3GiJFqj/4o9E6F/Uye/b0MbWxcXpqnlE2zlc4cdloQdIqlCtFYhFazOWxzLcaM
      kR8BBLuf1771DeB+UygBXvnaV7n/bBXDAFEUHmgXIgoCkjDysX0k5HN8ivtpYGWBnoCVKXk6
      4+7byI8AJ2FjdZVcNjOwjlmNsU5yTOrChSUmksmB723xZEYqAJrlHMtbe0ynLhANHO2kSACt
      VaEpBfDdr5C8/cnHvPfO28/IytPh9/7wj6wAOAVGKwAaHZauPM/W8ipa3Um5I+K1qWSLLeaS
      EXb2DxBFhehEkmp+D290mn5lH1nQadpViHjxuaxOaRZHZ/RWWIaOpqncvbtCs16l0ReYivgp
      1ZrMXZohFIjRKBao1uusrW/Q0USiARdra+vWwc8Wx2akRgBfwMO9OyssXLpMMhak0NSZTESw
      iQIuTcdus2GPGGi6CwQDXySGx2FDUeC1rybpddo4Fes5gMXROZNZoL3dXarVwdsk6pqGaEJj
      LP1+Y6zj7IdITEwSCj985rGVBTJXZ6RGALMIBcOEfIN3hxhmYyyH19r5eRoMJQD63Ra66AC9
      /1Bzq16vh+1+U6wv87hGWIah0e+DzfbFB/Xe399k5/018w0/Rf7pf/kjHD7XsM048wwlAA4O
      dqk0RBRJJTWTpNJUaRR2UIIztIq7BOMzBFwS5WafkN9Fo9khl82QiIZQRScuxaBSbxOPhjg4
      WKGrJnAqbSKJSeyK1RrF4ugMZwokOgjaW+zWVeofvke1J5FMhPE7HdQ0nXzugJ3SAdWeRCIc
      IDSdAiC9tcZ2WeXCZAhDkamXivhjLlr5CnfX01zzR7Ar1tTB4ugMJQCcTiehiQn2P/qUaDyB
      vScSDrgolkrEEoeVXm3FwNYTiYSCRMN+9FaNRr9NNKwQiMSw22Xa1RoH+wUioWmCATeapg3D
      HYsx5kxmgTbfW6a0mRtYR9cNRNGctiggHKso5oXffRXbI459tbJA5uqcyQCwNsOdns64+3Ym
      06DsvgWl5YFlZJNqIsWTnBT8wvfBZj3Ue9acbgCoDd559zbx2RSp5NMOvO6xt1chef+6jY0N
      5ufnH7rKMGrs70My+aXjkTplqO0ObK5ZTVZOpGPoJt3d4kmcbgAYGr2+hiSKvPkPP0YPzOEX
      Wji8QaqVCp6Aj407dwjMPMc3Xpqn1+vwq3/4Wyafe5let8un777Bdl3mQtxJod5lOh4hVz7A
      5Yjz0c0bfPPbr+F3PfwMwcLicZz6ZrjphYvMJFz0dBdar40nGCcR9oAg0W83UVwBQv7PtkIL
      BPw+stk8YNDqqkiGis0dYHF+ik6zjWKzIUkOXLJGsWaVRFocj9NdBBvG52WNqqohiOLn7ce1
      +/tuDE0DQUSSBAzjcD8Ooni//FHHQED6bMFlGIcH0IkiuqYhyTKCIKDe/TFy9oPBzcWcadBn
      b/CxtL72n8DufejH1iLYXB0rC/QErA/J0xl3385mFqiyBe3BG2OJug4m/GEFQ7+/Ee4IY4Di
      hMS1ge9pcTSeaQAUCgVCIR/1eh+//zCl1263kSQJxWZ74ONQqVQIBAJUKhW0Xg+n14vD6Xzk
      IuWzax9L/jZkBp8CmbWr6Fgh5IpaAXCKPNMAyOfzBINOioU8Oxv38ESnkLUG66sbLL5wjWYh
      gzc6Sat0QKbW59dfvc7W6i3swVkC3S4NBdL7BVLzc+xsbRGMT9EpH1BoGcxG8pTaEPZIHOQq
      KDaZ2flL+N1WFsji6DzTLJCmqvSaNbqagT82g9Fr0Wj1mJ5LEXd2WN4uUsoeoNkDxIOHmR+H
      y43a69JsNGi3eszPJFjfSTOzsEQ5u4NgDxD1OyjVezjpUWpqzAT9xGaTVmMsi2PzTEeA1HSC
      td0SF5dSqKqBrjnRNA29UyfXcXF5PoIzNIlaz6M7Dg+2mJq9AGqPji7itMnYFIn5CY2f/uiH
      vPjV11D0JrhChH09ii2YjQSwCWDYFQybdT6AxfE4m1mgShq5XxtYR9N0JGnwQVLTdURBPNqu
      CskOoYXHvmxlgczVOZNZINXmQVUGb4+iaSqSCd2ZdV1DEMQjlUTaHIERbNVxdhmPAND65Aol
      PP4gLsfhIvdxJZIAK+/9d/aW//dpWmgaX/8Xf44/+vywzTg3jEcANDLslAyk7CpzExEMm5vs
      /i4zyQS1jk7A68Jmk9E0AZttPFyyGA3GZrQtF/PYnU62Nla48cHHAGTSW7z15g1Wt7ZoNwtk
      8vUhW2kxboxHAChOrr54jecWZlAcLiKhAB6PB1FSmIhFCbht3F3eQXFYneEsjsd4zBdcEeL3
      /3nlxZe/9MI0qYuH/5qZ+SJz4o9eRle/N/Bth1ESqditc45Pk7OZBrU2w52azrj7Nh4jwDH5
      sPA2G43BSyINwzhWN7fH6vD0bXCKZOMPU/9m4HtZHI+RDYBSep2VTJ2F1Axujw+XXQatx2Y6
      R2p26qHru+0a9bZAJOSl0iux19oZgtUnxy5abd2HwcgGgNbvoSHSq9fotSp8eFAiEghgADff
      /gV51cOUX6RQ7ZOai7K7lyWZem7YZluMGSObBZIUB89fvYpTArWvMn/5KnZJB71Pqy8gqD1s
      3hCLU3Ea7Q52u920InaL88PIjgDBydnDiXNyhgAc1lGmFgHQFxZBEA87LgMJoK9qyMpn7gj3
      z5AcH4QzcqrluGFlgZ6AlSl5OuPu28iOAIPQ3NhHzQ5+QIam618U4A+Afj+b9KQxSZAlQl+z
      9gCdNiMRAM1qkbWtNLOLlwi4n5AN0VUKlTqRUPChl9Reh04fPG4HtY/Xqb5z9xlabD6iw2YF
      wBAYiQDY3cuQnIhi6C3ufbqOPxoiny8yOz3Jzs4uyckJtvf2iUTiNJpNWuUsXcmLkxbZcpcL
      czHurqwzMXcJj9sxbHcsxoiRWHnpuobNLpDPFdAlH8XddZrNFit3P6VUb1LKZInMXaTfroLR
      p1iqsr66RlsTSPhdbOeKXFpaMK2I3eL8MBIjwEJqlpX1LaYXFpB0BZvoYXl9j9m5JXa3twlN
      JHG4bGixBJohUJUFAgkf4YAHGQjQZ2MnS+oRvUMtLJ7EmcwCNXYyaOXBC+Q1XUMSzTklUhCf
      nJoVJBHfldRTtawskLk6IzECmI0j4UGcGPyAOU1VkUxIp+raYRvIJ+0rEiTraKdhMBIBoGsq
      5UoVnz+IIg/+TdLZ/2v08hsmWHZ6OFN/ghKwGmKdNiMRANntFQp9G6Jo0NVsKHoLyenDRo9a
      W8XrVKi1VcI+J8VylUgsRiWfwxOKoncb6KKNZq1KOJZAkcbrCbDFcBmJAIgkZyneu0ezblDr
      O+hWKthcJQTVoK92qTpk7tze5vK1Jew2hU8++RiPJ0SmuE67ViDsdXIvneO5q3bmJwc/INvi
      /DASAdCsVehpBqLiwKM4CHunQO9QzO5TLDeYSkaZjEcx9D7ZfIPpZJJMehd/fJpYJHB4NkAH
      fNYzAItjMsJZIIP05io92UdqKoEgQLvRwObxPDXf3869jtG8N7gFZhXEHEHHHv8ekmvuqVpW
      FshcnREOgJNjbYY7PZ1x920kpkBm89Ybv2T5zu2BdcwbAQDhyWWRv/U7/5zZlPUg77QZ6QDY
      X79HulxjYuYi0zH/YUnkXo7UzJNLIov5PJvr60Ow+OQ0rc7WQ2GkA0DTdLx+N7XsHje2V/D7
      QxgYfPzO6+RVD0m/SKHSs0oiLU7MSAeAKCmEowmc7Sp3D/r0uh0URaTZA0PrYPMkWfRAtd3C
      6XCMWQ2YxSgw0gEwkVo43ELg9XAtEEW6v7DR5xdAFD8vVolj0O+rKIp1OozF8bCyQE/AypQ8
      nXH3baRHgJNSKRZot0zYDWrSARm6fnhKpCAIROIJnC73wJoW5jCUAOi3a9xd2SSZWiLse3AX
      ZL/fRxYFaq0Ofu/huWHNaoGGaiPilVjZyvHcUgqt30MX5EdunsvspznY2T4VX47LtV/7uhUA
      I8RQAqCUyyI6PNglg7uf3sQdSeCU7Qio3Lt9k4nZi+QPtglPznNhLkkmX6KnQi9bItcJ4lhd
      RhDteMJ+9re2mUhOsrefYfHiZTyOMzmoWTwjhvJpCcSnUGolVpY/xROcpVrYpSGFUft14lMp
      5pIxBFEArQuGSnprm5Ym8drLKSQ5QSV7QMIhsJfeJTa/RK+YplEusJcvc3E6OgyXLMaUoQSA
      oXZJHxRZvPQi+d0NYsmLtIv7aO4IUa/MTrZMLBLG0DUMrc+1r34TJx26SAQUBW8ygU3QWYjF
      2FldIxyPE4jpTIQ8w3DHYow5k1mgcrFAt9MZWEfXNETJnJJIURBAEAiGw9gdJ6/+srJA5uqc
      yQmzx+HEZ8IzAVXVkOXBA0DTdERRQHK5EEz4A1uYx0gHwEORbBj0VBXbIz5EulfSS4cAAAYg
      SURBVK6hGyBLEpU/+3PaP/v5KVp6NMJ/8se4f/0bwzbD4kuMdACk02kmJ+J0ejpat4nD5WF7
      L8NE2IehuLCLGrVWj1jIx872JoonRjL+cNc4C4vHMdIBALBy9zaxaJC3P1xlcnoKr9vBxupd
      sk2RmZgXXYVqtYDNhCe/FuePkf7UOJ1OnM5pYmEvk/ESsUgIER3V7iFqtxGMRnAALbVFJltm
      JpAYtskWY8ZIB0Ai8cUH+tVfe/WLF6anH7guBEx9qUTANjcHr77KoBiGbkrf/sPCGpAi4YG1
      LMzlTKZBrc1wp6cz7r498xGg227RN0Q8ruN2bDBQVf3zNOTjnDIMHU0D+Ut7gvS9IqoJrREx
      DFSTiuJFnwsWJga3ycJUnm0AGH1WllcJxCZOEAB9MpkKU1MxAHZ2dlhYWHjEdQ2yWUgmfV/c
      1iajP+mcgSNiZlcIwy5jqKopWuoI6ei6jiiK6Lo+MjYdR8eaAp2CjqZpiE/pDXraNlm+HTIS
      5wOYjRnz0VHUMVNr1HTM1DqOzpkcASwsjor0gx/84AfDNsJs9F6TDz+8iSo68XuPs/HMYHdj
      lbXNXWRR59btu3j8Xm5/fJO+4CTgPXrLdcMwWL1zExQ3q3c/palKlA822MnWiMfCRy7gNwyN
      5VsfU+sL1LI7bOwXsBsdPrmzQiAygU0+shLba/fY2N5HFo0T+1YvZllL5wh5FG5+9BGq7OJg
      8y7ZWpd+Pc/Kxj7ReAzpKVMiQ+vwyfu38E9G2bp3m52DEkavzp2VLQJehY9u3sLuDeJ2PD2b
      k95cpdYz8LrtfPLh+7jcbj799CbYfeysfEK5ZRAJ+h75u2dyClTK5Em9cJ12LX/s303OzBH0
      uSgWG1x/eYnV928zdfVluo3SsXQ69QItVaeYKxCfu4jWqqBLToKKQfcYOmqvSibXQBB0ejiJ
      eBTSxSYvXV0klykcz6Z2B03tkyvWTuybNxzHpQg0yzmmLr1MO7+G5J1B1ru0+gKLU15K1f5T
      dQTJwVTUTx+RufkFPE4btbbGS3M+btwt8NJLVygXikeyaXI6hdZrU8rsoQkS+7kSl6++QiV7
      B6c/haC2Hvu7I/0g7KQ4nQpb6TQYx3dv5e5tXOEkolFkZ3MPXzxAdnsHyTjed0UhX6ReKdJz
      K/SMPoYuQLtOE5mH23o9HlG0E46GKOdyKJJA0xBwKCLp9D42/9zRhQyDrmrgdgj0+/0T+9Zp
      NahUKnjsQfJ7mwiyl34liyEa2MUumZxOYnHm6eZofYqVCs5qhY2NDRLTKSq5PTYPekwEfGzu
      7CMq3iPZVKuUqFQqNNEo5fYRZAd76R2QA9QrB6A8/nNwRtcABsVcFm8ohu1YB24YlAs5mj2d
      aDhEpVonGg1TLuTwBKLYleMFgab20JFoVIo4fCGMbpMeyrGmUmBQr5TQZSd2QaWligTcNnKl
      +rGmUgDtRpVaWyMa8pIvVk/kW6tepVSt4w9F6DZr+IJhus0qKG7sokqtpRIJ+Z/uldZj7yCH
      zeECtYOKTCTgpdrsEAn6yOeLhKJRZPHpHhZzGTqqQSw+AWoHUbFRyucJRmO0qkUkhw+389Hb
      489oAFhYHI0zuQawsDgqVgBYnGusALAYKdR+l0azha6p1OsNNN2g027S7vQwMGg3GzRabR41
      b//sd486qW9WC2czC2Qxrqj8+K9/yNSlq7Qzq+iKE80ZJSB0+HR9l3/7/T/kR3/1lzhcTl55
      7XvYBQ2vy0lHU/G77Pz0b35EcvF5FueSqIaIUxFotro4JJWDTJ6dssrXry3S10X8Hifv3PjA
      CgCLEcKoY9hivPLiJX60ucrvf/dr/PDHbxObdJBaOmx9r/a7IAe58fc/ZD1d5uLsJO5LL/Lt
      pQkMV5iXX3ye13/yF/ziVpbriwkmQk6KbQlZEdmvwl0jzy9uN/jP//636Ql2awpkMUIIAaLe
      Dq+/9RGXZiL85Kevs7g0xbufrCPoh7s7U5eu8gd/8PssLaS4ev06idgk168sITk8RO19fvnW
      +zRVkYvzM6D1KDV0pibjTM7O45U0Kq0eU9EIiDKC1rfSoBZnl62tLebm5h77+s7KLSsALM43
      /w9Nwu1aukSZOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global Emission' width='192'>
      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
      Gul67LBbAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Oil Prices Vs PCE' width='192'>
      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
      6+oYNbUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Overview 1' width='192'>
      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
      jRKJxYgnEoSjUaKxuQ/MajHzyr69NNTXkUymGPd6udTSht1mxeVwMBWYfR7Iy8nh9Reeo723
      l1QqzcPbthKORgmGQoSjETr7+onFEwTDYWqrKslx2G/uiSyzIInz/0ji4H8CNXX7bqqmSXcf
      RNBbEIs3LigEmqri/cHfEj12/LZ0vaQVQNM0mju6+PDQ58QTiZnP16yoJt+Vw8QCrg+LUVe7
      AlEUSSZTXG5vJ5XKqD47evp4bOd26mpXcPTseSwmE7u2NLC6pprxSS95OTk47XYSySQj7nEA
      2nv6WFVdRTQWo6SggKL8Byf08W6QvPIOyWP/FbgTQYQaiaP/BSQd+oZvZm+haQTfe/+2TX5Y
      ogAMjo7xzif75+zJ23v6bknzIssyD23ZDIDH652Z/Fdp7ugiFAmTSKbwB4O4JyYJhsKcuniJ
      UCQCwFQgiCiKqKqK0aDnuccfoaO3j7buXjyTk1SWlX7p8S1zjfRoI4nP/zN3ZvJfI3Hk/0HM
      W4VctnXudy0tBN5977b2t6gAaJrG8XMX5j2QxhMJSgoLGB333HTnOxo20NHbRzyRwG61opPl
      WcavWDxOInltqb3c2o5epyOevLYK6WSZF554jM6+fiZ8Ps41NdPV18/4pJdzFvOyANwGtFSU
      +Kf/DpS5OvXb35lC/NP/Hcvv/hJBf+2MqSWT+N74EdzmEPYlrQDjk5MLfr+jYQMtnd109vUv
      uePK0hIutbQRmT4XCIJArtNBKp0mnkyS63RSXVbGiQsXZ67R63REprc3AyOjCILAqpoq1q6q
      pbOvjxH3OCPuccqKi6goKUan03H45GkK8/NYXV01oxWKxGIMj7qRZYny4mL0et2Sx/0gkjz3
      I7TA0F3rTwuNkTz3BoaH/peZz8KHDpN2u297X0sSgMw2J7vOH8BqsfDNl1+Y1sBcRFGUedta
      TCaefnQPZy41zUx+yKw0vkCQ33ruaQ4eP8nouAe3ZwK71UoqncZqNvPyU0/Q3tOL1Wrh6Uf3
      0NTeyemLl6gsLSFxncWvpCCfwZExLlxpmflsZVUl33jhWUbc47zzyX7CkYyhpiDXxW+/+Dx5
      rpylPIoHDjU2RfLSv9z1fpONP0W/+bsIJieaohD88Nd3pJ9FtUCCIBCORukfHsn6vcVs4plH
      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
    </thumbnail>
    <thumbnail height='192' name='Overview 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region wise' width='192'>
      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
      NLIAZDKa/w+27TnZCeFoUgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Region' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQiElEQVR4nO3dyW8cZ3rH8W9V7wubvXMVd1GUZHkNxllm7Dib44znlA0BAkyuueacBEEQ
      5J6/IAiCTDJGkHEO9oxmJgN4MDAcjeVNlqiVpLizm2Q3m6zeastBlmLZKknNbhabXc8HECBA
      6nreatSv31re9y3Ftm0bITxKPe4GCHGcjiQAlmW1/Xm3OqZ229oK27Zd2y9wd99Oaq2uDIBp
      mh1qSXfVsizL1QOlV7/HTtaSUyDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFp
      EgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4Wn+Vj+wu7nCSqHC6dOT3Lp+jdzoDPre
      Bko8z6nBDMpRtFKII9JyACLxBMFika1iEUvtIx1qsuRPY+8WYCCN9cW813amrdm27drUwXbb
      2go3p0OCu/t2Umu1HAAbhWg0hGkHGciqXL+1RCh1CpuHJ3srSnt9Qbuf78Za9+v04r6d1Fot
      B6BaKbFXU5mZSrB45w7jZy6gFVdQ88OgKKiKgmVZqOrhLy8URXnw56gpitJWW1txf0UIt+q5
      uW8ntZZyFAtjGYaB399yth7QdR2/3+9KAHRdJxAIHHkd+P/VDHw+nyv13Ny3k1pL7gIJT5MA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhP
      kwAIT2t51srW6gLLa1sMnRpndeku+dExyltrKNEkz5+bxcVZcUK0reUApFIpFu6uo2sasy++
      zPb1D0iMPoN9sIVtW5jmvXfh6rp+6EZZloVhGIf+fKu12mlrK+5PvnNrcryb+3ZSa7UcgGKh
      iM+vYKAwf/kDsoND7CxdRY0kUBQVv1+VKZEOZEpk99WSOcESAE/Xkotg4WkSAOFpEgDhaRIA
      4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WkSAOFpEgDhaRIA4WktB6BZ
      rXDzzhK6oXP7xjyF3X22N1bYqVSPon1CHCnHAFhGg1s35lnb2nnoDcBarUl/qMni8gb+aJp0
      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
    </thumbnail>
  </thumbnails>
</workbook>
